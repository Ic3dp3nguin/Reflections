What happens when you initialize a repository? 
	
	It will create an empty repository in the folder of the users choice. You will need to do some to start adding and tracking the commits of the work being done in that folder.
				

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

	The staging area is an inermiediate step from the working directory and the repositiory, and allows the user to decide what to add to the newest commit and what to keep for a later commit.



How can you use the staging area to make sure you have one commit per logical
 change?

	By examining the staging area and using the diff function to check what changes are currently there, it allows the user to decide whether all the changes are of progression of if multiple changes are loaded.



What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

	Branches will be helpful when changing the nature of part of the project, if you want to add new features that aren't fully ready or debugged. It will help by allowing you to keep a master file which is bug free while still managing to keep track of changes to the new feature.



How do the diagrams help you visualize the branch structure?



	The help by providing an easy to understand picture of what commits hepled to form the current file of the branch.

What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?



	Merging will add lines of code common to the new commit and check to see which removals and additions happened in chronological order and perfrom these to the commit, creating a new file with all changes of the branches.
	It is represented with two seperate lines in the diagram to show which commits are related to the other commits in the log.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
