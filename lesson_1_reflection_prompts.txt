How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

   

	It showed a quick comparison of changes, allowing me to see where a working code might have been broken.

How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

    

	You can view changes to code to see which changes sped the code up.



What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    

	Manual saves allow for user control and torecord versions after the user has completed the set of changes.. Auto allows for the removal of human error.



Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    

	Multiple save control systems are designed for use by users who will have interconnected files.

How can you use the commands git log and git diff to view the history of files?

   

	Git log gives you a list of all commits and git diff allows you to compare the commits.



How might using version control make you more confident to make changes that
could break something?

    

	If a bug does appear, it becomes wasier to restore the file to a version that works.

Now that you have your workspace set up, what do you want to try using Git for?

    

	Keeping track of projects.